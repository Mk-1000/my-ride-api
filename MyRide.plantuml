@startuml
class User #LightSeaGreen {
  +id: Long
  +name: String
  +email: String
  +encryptedPassword: String
  +phoneNumber: String
  +profilePictureUrl: String
  +userType: UserType
  +address: Address
}

class Address {
  +street: String
  +city: String
  +state: String
  +zipCode: String
  +country: String
}

class Location {
  +latitude: Double
  +longitude: Double
  +fullAddress: String
}

class Rider #LightSeaGreen {
  +licenseCard: Verification
}

class Verification {
  +id: Long
  +documentNumber: String
  +documentImageUrl: String
  +selfieWithDocumentUrl: String
  +verificationStatus: VerificationStatus
  +verificationDate: Date
  +verifiedBy: String
}

class Customer #LightSeaGreen{
    +cinCard: Verification
}

class Car #LightSeaGreen{
  +id: Long
  +licensePlate: String
  +make: String
  +model: String
  +year: Int
  +capacity: Int
  +owner: Rider
}

class Ride #LightSeaGreen {
  +id: Long
  +startLocation: Location
  +endLocation: Location
  +rideDate: Date
  +rideTime: Time
  +availableSeats: Int
  +pricePerSeat: Float
  +driver: Rider
  +car: Car
}

class Booking {
  +id: Long
  +ride: Ride
  +passenger: Customer
  +seatCount: Int
  +totalPrice: Float
  +status: BookingStatus
}

class Rating {
  +id: Long
  +ride: Ride
  +rater: User
  +ratee: User
  +score: Int
  +comment: String
  +ratingDate: Date
}

class Message {
  +id: Long
  +sender: User
  +receiver: User
  +content: String
  +timestamp: Date
  +status: MessageStatus
}

enum UserType {
  RIDER
  CUSTOMER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum MessageStatus {
  SENT
  READ
}

' Waiting for verification (initial state)
' Good detection by AI (automated status)
' Final approval by support team
' Rejected by support team or failed AI verification

enum VerificationStatus {
  EN_ATTENTE
  VERIFIED
  APPROUVE
  REJECTED
}

' Relationships
Customer "1" -- "1" Verification: hasCin
Rider "1" -- "1" Verification: hasLicence
User "1" -- "1" Address: has

User <|-- Rider #LightSeaGreen
User <|-- Customer #LightSeaGreen
Rider "1" -- "0..*" Car #LightSeaGreen : owns
Rider "1" -- "0..*" Ride #LightSeaGreen : creates 
Ride "0..*" -- "1" Car #LightSeaGreen : uses
Ride "1" -- "0..*" Booking: hasBookings
Customer "0..*" -- "0..*" Booking: books
Ride "1" -- "0..*" Rating: receives
User "1" -- "0..*" Rating: givesRating
User "1" -- "0..*" Rating: receivesRating
User "1" -- "0..*" Message: sends
User "1" -- "0..*" Message: receives
Ride "1" -- "1" Location: startLocation
Ride "1" -- "1" Location: endLocation
@enduml
